on init
    # Mount staging areas for devices managed by vold
    # See storage config details at http://source.android.com/tech/storage/
    mount tmpfs tmpfs /mnt mode=0755,uid=0,gid=1000
    restorecon_recursive /mnt

    mkdir /mnt/secure 0700 root root
    mkdir /mnt/secure/asec 0700 root root
    mkdir /mnt/asec 0755 root system
    mkdir /mnt/obb 0755 root system
    mkdir /mnt/media_rw 0750 root media_rw
    mkdir /mnt/user 0755 root root
    mkdir /mnt/user/0 0755 root root
    mkdir /mnt/expand 0771 system system
    mkdir /mnt/appfuse 0711 root root

on post-fs
    # start essential services
    start servicemanager
    start hwservicemanager
    #start vndservicemanager

    # Mount default storage into root namespace
    mount none /mnt/runtime/default /storage bind rec
    mount none none /storage slave rec

    # We chown/chmod /cache again so because mount is run as root + defaults
    chown system cache /cache
    chmod 0770 /cache
    # We restorecon /cache in case the cache partition has been reset.
    restorecon_recursive /cache

    # Create /cache/recovery in case it's not there. It'll also fix the odd
    # permissions if created by the recovery system.
    mkdir /cache/recovery 0770 system cache

    # create the lost+found directories, so as to enforce our permissions
    mkdir /cache/lost+found 0770 root root

on post-fs-data && property:ro.crypto.state=encrypted
    # HALs required before storage encryption can get unlocked (FBE/FDE)
    class_start early_hal
    start teecd
    
    # We chown/chmod /data again so because mount is run as root + defaults
    chown system system /data
    chmod 0771 /data
    # We restorecon /data in case the userdata partition has been reset.
    restorecon /data

    mount ext4 /dev/block/bootdevice/by-name/system /system wait ro
    # Make sure we have the device encryption key.
    start vold

    setprop vold.crypto_unencrypt_updatedir /data/update

    setprop vold.status start
    
    #disable readdir_ra
    set_readdir_ra userdata 0

    #restorecon_files_under_dir /data/system

    # If there is no post-fs-data action in the init.<device>.rc file, you
    # must uncomment this line, otherwise encrypted filesystems
    # won't work.
    # Set indication (checked by vold) that we have finished this action
    setprop vold.post_fs_data_done 1
    load_data_version_prop

service hwservicemanager /sbin/hwservicemanager
    user root
    disabled
    group root
    seclabel  u:r:hwservicemanager:s0
    onrestart class_reset hal
    onrestart setprop hwservicemanager.ready false
    writepid /dev/cpuset/system-background/tasks /dev/blkio/system-background/tasks
    
#keymaster rc
service keymaster-3-0 /sbin/hw/android.hardware.keymaster@3.0-service
    class early_hal
    user system
    group system drmrpc log
    seclabel u:r:recovery:s0

#init.tee.rc
on init
#mount secure storage partition for teeos
     mkdir /sec_storage
     mount ext4 /dev/block/bootdevice/by-name/secure_storage /sec_storage nosuid nodev noatime wait crypt discard,noauto_da_alloc,mblk_io_submit,data=ordered,context=u:object_r:teecd_data_file:s0
     chown root root /sec_storage
     chmod 600 /sec_storage

on init
#add for TrustedCore driver
    chmod 0400 /dev/hisi_teelog

#secure os tee agent
service teecd /sbin/teecd
    class core
    user root
    group root readproc
    seclabel u:r:tee:s0

#vold.rc
service vold /system/bin/vold \
        --blkid_context=u:r:blkid:s0 --blkid_untrusted_context=u:r:blkid_untrusted:s0 \
        --fsck_context=u:r:fsck:s0 --fsck_untrusted_context=u:r:fsck_untrusted:s0
    class core
    socket vold stream 0660 root mount
    socket cryptd stream 0660 root mount
    socket cryptd2 stream 0660 root mount
    ioprio be 2
    group system
    writepid /dev/cpuset/foreground/tasks /dev/stune/foreground/tasks

#android gatekeeper rc
service gatekeeper-1-0 /sbin/hw/android.hardware.gatekeeper@1.0-service
    class early_hal
    user system
    group system
    seclabel u:r:recovery:s0
	

#servicemanager rc
service servicemanager /system/bin/servicemanager
    class core animation
    user root
    group root readproc
    critical
    seclabel u:r:recovery:s0

on property:vold.status=start && property:ro.crypto.state=encrypted
    exec /system/bin/vdc --wait cryptfs enablefilecrypto
    init_user0
    unlock_user0_key
    setprop vold.status end

on property:twrp.decryptdone=true
    stop vold
    stop gatekeeper-1-0
    stop keymaster-3-0
    stop teecd
    stop servicemanager
    stop hwservicemanager
	umount /system
	
on && property:ro.crypto.state=unsupported
    stop vold
    stop gatekeeper-1-0
    stop keymaster-3-0
    stop teecd	

#init.recovery.huawei.rc
service oeminfo_nvm /sbin/oeminfo_nvm_server
    critical
    ioprio rt 4
    seclabel u:r:oeminfo_nvm:s0	

on init
    write /sys/module/hisi_nve/parameters/nve /dev/block/bootdevice/by-name/nvme
    mount /tmp /tmp tmpfs
    # change nve device visit permission
    wait /dev/nve0
    chmod 0640 /dev/nve0
    write /proc/sys/vm/max_map_count 1000000

on fs
    wait /dev/block/bootdevice/by-name/oeminfo
    start oeminfo_nvm
